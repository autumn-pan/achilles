typedef struct ASTNode;
typedef enum NodeType;
ASTNode * create_variable_declaration_node(char *identifier, ASTNode *value);
ASTNode * create_variable_call_node(ASTNode * id);
ASTNode * create_function_call_node(char *id, ASTNode *args);
ASTNode * create_function_declaration_node(char *id, ASTNode *args, ASTNode *body);
ASTNode * create_class_declaration_node(char *id, ASTNode *body);
ASTNode * create_constructor_declaration_node(ASTNode * args, ASTNode * body);
ASTNode * create_if_node(ASTNode * condition, ASTNode * body);
ASTNode * create_else_if_node(ASTNode * condition, ASTNode * body);
ASTNode * create_else_node(ASTNode * body);
ASTNode * create_while_loop_node(ASTNode * condition, ASTNode * body);
ASTNode * create_for_loop_node(ASTNode * init, ASTNode * condition, ASTNode * update, ASTNode * body);
ASTNode * create_block_node(ASTNode ** statements, int numStatements);
ASTNode * create_return_node(ASTNode * value);
ASTNode * create_int_node(int value);
ASTNode * create_string_node(int str);
ASTNode * create_boolean_node(int boolean);
ASTNode * create_binary_operator_node(NodeType op, ASTNode *left, ASTNode *right);
ASTNode * create_unary_operator_node(char *op);
ASTNode * create_constructor_call_node(char *id);
