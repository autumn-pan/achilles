typedef struct Token;
typedef struct TokenStream;
typedef struct Lexer;
typedef struct parser;
bool alphanum(char c);
bool alpha(char c);
bool num(char c);
bool inArray(const char *array[], const char *value);
bool charInArray(const char *array, char value);
char * toString(const char character);
char advance(Lexer *lexer);
char lookahead(Lexer *lexer);
Lexer *init_lexer(const char *src);
Token initToken(enum TOKEN_TYPE type, char *value, int line, int column);
Token nextToken(Lexer *lexer);
bool isWhitespace(Lexer *lexer);
bool match(Lexer *p, enum TOKEN_TYPE type);
bool match_value(Lexer *p, const char *value);
Token *get_current_token(Lexer *p);
Token *get_next_token(Lexer *p);
